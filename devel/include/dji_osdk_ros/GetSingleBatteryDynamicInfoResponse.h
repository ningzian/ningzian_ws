// Generated by gencpp from file dji_osdk_ros/GetSingleBatteryDynamicInfoResponse.msg
// DO NOT EDIT!


#ifndef DJI_OSDK_ROS_MESSAGE_GETSINGLEBATTERYDYNAMICINFORESPONSE_H
#define DJI_OSDK_ROS_MESSAGE_GETSINGLEBATTERYDYNAMICINFORESPONSE_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <dji_osdk_ros/SmartBatteryDynamicInfo.h>

namespace dji_osdk_ros
{
template <class ContainerAllocator>
struct GetSingleBatteryDynamicInfoResponse_
{
  typedef GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> Type;

  GetSingleBatteryDynamicInfoResponse_()
    : smartBatteryDynamicInfo()  {
    }
  GetSingleBatteryDynamicInfoResponse_(const ContainerAllocator& _alloc)
    : smartBatteryDynamicInfo(_alloc)  {
  (void)_alloc;
    }



   typedef  ::dji_osdk_ros::SmartBatteryDynamicInfo_<ContainerAllocator>  _smartBatteryDynamicInfo_type;
  _smartBatteryDynamicInfo_type smartBatteryDynamicInfo;





  typedef boost::shared_ptr< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> const> ConstPtr;

}; // struct GetSingleBatteryDynamicInfoResponse_

typedef ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<std::allocator<void> > GetSingleBatteryDynamicInfoResponse;

typedef boost::shared_ptr< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse > GetSingleBatteryDynamicInfoResponsePtr;
typedef boost::shared_ptr< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse const> GetSingleBatteryDynamicInfoResponseConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace dji_osdk_ros

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'nav_msgs': ['/opt/ros/kinetic/share/nav_msgs/cmake/../msg'], 'sensor_msgs': ['/opt/ros/kinetic/share/sensor_msgs/cmake/../msg'], 'dji_osdk_ros': ['/home/dji/ningzian_ws/src/Onboard-SDK-ROS/msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/kinetic/share/actionlib_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "a9853b8ae869150ea1bdf509de0b60da";
  }

  static const char* value(const ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xa9853b8ae869150eULL;
  static const uint64_t static_value2 = 0xa1bdf509de0b60daULL;
};

template<class ContainerAllocator>
struct DataType< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "dji_osdk_ros/GetSingleBatteryDynamicInfoResponse";
  }

  static const char* value(const ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "\n\
SmartBatteryDynamicInfo smartBatteryDynamicInfo\n\
\n\
================================================================================\n\
MSG: dji_osdk_ros/SmartBatteryDynamicInfo\n\
uint8  batteryIndex\n\
int32  currentVoltage          # uint:mV\n\
int32  currentElectric         # uint:mA\n\
uint32 fullCapacity            # uint:mAh\n\
uint32 remainedCapacity        # uint:mAh\n\
int16  batteryTemperature      # uint:0.1â„ƒ\n\
uint8  cellCount\n\
uint8  batteryCapacityPercent  # uint:%\n\
SmartBatteryState batteryState\n\
uint8  SOP                     # Relative power percentage\n\
================================================================================\n\
MSG: dji_osdk_ros/SmartBatteryState\n\
uint8 cellBreak                  # 0:normal;other:Undervoltage core index(0x01-0x1F)\n\
uint8 selfCheckError             # enum-type: DJISmartBatterySelfCheck\n\
uint8 batteryClosedReason        # enum-type: DJI_BETTERY_CLOSED_REASON\n\
uint8 batSOHState                # enum-type: DJISmartBatterySohState*/\n\
uint8 maxCycleLimit              # APP:cycle_limit*10*/\n\
uint8 batteryCommunicationAbnormal\n\
uint8 hasCellBreak\n\
uint8 heatState                  # enum-type: DJISmartBatteryHeatState\n\
";
  }

  static const char* value(const ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.smartBatteryDynamicInfo);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct GetSingleBatteryDynamicInfoResponse_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::dji_osdk_ros::GetSingleBatteryDynamicInfoResponse_<ContainerAllocator>& v)
  {
    s << indent << "smartBatteryDynamicInfo: ";
    s << std::endl;
    Printer< ::dji_osdk_ros::SmartBatteryDynamicInfo_<ContainerAllocator> >::stream(s, indent + "  ", v.smartBatteryDynamicInfo);
  }
};

} // namespace message_operations
} // namespace ros

#endif // DJI_OSDK_ROS_MESSAGE_GETSINGLEBATTERYDYNAMICINFORESPONSE_H
